The "7-base_geometry" module
=============================
Using "BaseGeometry"
-----------------------
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Normal cases:

>>> bg = BaseGeometry()

>>> bg.integer_validator("laura", 23)

>>> bg.integer_validator("betty", 98)

>>> bg.integer_validator("", 8)

Error cases:

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("cvv", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("laura", -58)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

>>> bg.integer_validator("cam", 23.1)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> bg.integer_validator("holberton")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("Betty", "holberton")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("neg", -36)
Traceback (most recent call last):
...
ValueError: test must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("test", {2, 8})
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("test", (2,))
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("test", [5, 1])
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("lcv", None)
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("vvv", True)
Traceback (most recent call last):
...
TypeError: list must be an integer
